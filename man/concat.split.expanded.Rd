% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cSplit_e.R
\name{concat.split.expanded}
\alias{concat.split.expanded}
\alias{cSplit_e}
\title{Split Concatenated Values into their Corresponding Column Position}
\usage{
cSplit_e(indt, splitCols, sep = ",", mode = "binary", type = "numeric",
  drop = FALSE, fixed = TRUE, fill = NULL)
}
\arguments{
\item{indt}{The source \code{data.table}.}

\item{splitCols}{The variables that need to be split. Can be either the name
or the index position.}

\item{sep}{The character or a vector of characters separating each value. Can
also be a regular expression.}

\item{mode}{Can be either \code{"binary"} (where the presence of a number in a
given column is converted to "1"), \code{"value"} (where the value is retained and
not recoded to "1"), or \code{"count"} (where the frequency of each value is
is returned). Defaults to \code{"binary"}.}

\item{type}{Can be either \code{"numeric"} (where the items being split are
integers) or \code{"character"} (where the items being split are character
strings). Defaults to \code{"numeric"}.}

\item{drop}{Logical. Should the original variable be dropped? Defaults to
\code{FALSE}.}

\item{fixed}{Used for \code{\link[base:strsplit]{base::strsplit()}} for allowing regular expressions to
be used when splitting the values.}

\item{fill}{Desired "fill" value. Defaults to \code{NULL} at which reasonable
options are provided by default. If \code{mode = "binary"} or \code{mode = "count"},
the default fill would be "0". If \code{mode = "value"}, the default fill would
be \code{NA}.}
}
\value{
A \code{data.table}.
}
\description{
"Expand" concatenated numeric or character values to their relevant position
in a \code{data.table} or create a binary or count representation of such data.
}
\examples{

DT <- data.frame(ID = 1:5, V1 = c("1,2,3", "2,2,2,4", NA, "", "2,4"), 
                 V2 = c("A ; B", " D; D; D ", "E", "", NA))
cSplit_e(DT, c("V1", "V2"), c(",", ";"), mode = "binary", 
         type = c("numeric", "character"))
cSplit_e(DT, c("V1", "V2"), c(",", ";"), mode = "count", 
         type = c("numeric", "character"))

}
\seealso{
\code{\link[=cSplit]{cSplit()}}, \code{\link[=cSplit_l]{cSplit_l()}}, \code{\link[=num_mat]{num_mat()}}, \code{\link[=char_mat]{char_mat()}}
}
\author{
Ananda Mahto
}
